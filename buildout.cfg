[buildout]
extends =
    versions.cfg

extensions = mr.developer
sources = sources
auto-checkout =
    produce
develop =
    .
    flock-conf

show-picked-versions = true
versions = versions
parts =
    sysegg
    environment
    poultry
    flock
    twarc
    pipe
    circus
    flock_config
    poultry_config
    circus_config

[sysegg]
recipe = syseggrecipe
eggs =
    psycopg2
    pyzmq
    psutil

[environment]
recipe = collective.recipe.environment

[sources]
poultry = git git@github.com:dimazest/poultry.git branch=development
produce = git https://github.com/texttheater/produce.git egg=false

[poultry]
recipe = zc.recipe.egg

[flock]
recipe = zc.recipe.egg
eggs =
    flock
    alembic
    ipdb
interpreter = python

[twarc]
recipe = zc.recipe.egg

[notebook]
recipe = zc.recipe.egg
eggs =
    notebook
    jupyter
    poultry
    ipython
scripts = jupyter-notebook

[circus]
recipe = zc.recipe.egg

[pipe]
recipe = collective.recipe.cmd
on_install = true
cmds =
    mkdir -p parts/pipe
    mkfifo parts/pipe/pipe

[flock_config]
recipe = flock-conf
clusters_conf = clusters.cfg

[poultry_config]
recipe = collective.recipe.template[genshi]:genshi
input = cfg/poultry.cfg
output = ${buildout:parts-directory}/etc/poultry.cfg

follow = ${flock_config:all_user_ids}

access_token = ${environment:ACCESS_TOKEN}
access_token_secret = ${environment:ACCESS_TOKEN_SECRET}
consumer_key = ${environment:CONSUMER_KEY}
consumer_secret = ${environment:CONSUMER_SECRET}

[circus_config]
recipe = collective.recipe.template[genshi]:genshi
input = cfg/circus.ini
output = ${buildout:parts-directory}/etc/cirus.ini

poultry_cfg = ${poultry_config:output}
