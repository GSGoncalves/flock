[buildout]
#index = http://pypi.upc.edu/mirror/

extends =
    versions.cfg

extensions = mr.developer
sources = sources
auto-checkout =
    produce
    poultry
    sqlalchemy-crosstab-postgresql
    paginate_sqlalchemy

develop =
    .
    flock-conf
    flock-web

show-picked-versions = true
versions = versions
parts =
    sysegg
    environment
    poultry
    flock
    flock-web
    twarc
    pipe
    circus
    flock_config
    poultry_config
    poultry_config_qm
    circus_config
    flock-web_config
    flock-web-dev_config
    mkdir
    pg_activity

[sysegg]
recipe = syseggrecipe
eggs =
    psycopg2
    pyzmq
    psutil

[environment]
recipe = collective.recipe.environment

[sources]
poultry = git git@github.com:dimazest/poultry.git branch=development
produce = git https://github.com/texttheater/produce.git egg=false
flask-twitter-oembedder = git https://github.com/eriktaubeneck/flask-twitter-oembedder
sqlalchemy-views = git https://github.com/jklukas/sqlalchemy-views.git
sqlalchemy-crosstab-postgresql = git git@github.com:dimazest/sqlalchemy-crosstab-postgresql.git
paginate_sqlalchemy = git git@github.com:dimazest/paginate_sqlalchemy.git

[poultry]
recipe = zc.recipe.egg

[flock]
recipe = zc.recipe.egg
eggs =
    flock
    alembic
    psycopg2
    ipdb

    flock-conf
    poultry
interpreter = python

[flock-web]
recipe = zc.recipe.egg
eggs =
    flock-web
    psycopg2
    chaussette

    flock
    paginate_sqlalchemy
    flask-twitter-oembedder
    crosstab
interpreter = py-flock-web

[twarc]
recipe = zc.recipe.egg

[notebook]
recipe = zc.recipe.egg
eggs =
    notebook
    jupyter
    poultry
    ipython
scripts = jupyter-notebook

[circus]
recipe = zc.recipe.egg

[pipe]
recipe = collective.recipe.cmd
on_install = true
cmds =
    mkdir -p parts/pipe
    mkfifo parts/pipe/pipe

[flock_config]
recipe = flock-conf
clusters_conf = clusters.cfg

[poultry_config]
recipe = collective.recipe.template[genshi]:genshi
input = cfg/poultry.cfg
output = ${buildout:parts-directory}/etc/poultry.cfg

follow = ${flock_config:all_user_ids}

access_token = ${environment:ACCESS_TOKEN}
access_token_secret = ${environment:ACCESS_TOKEN_SECRET}
consumer_key = ${environment:CONSUMER_KEY}
consumer_secret = ${environment:CONSUMER_SECRET}

[poultry_config_qm]
recipe = collective.recipe.template[genshi]:genshi
input = cfg/poultry-qm.cfg
output = ${buildout:parts-directory}/etc/poultry-qm.cfg

access_token = ${environment:ACCESS_TOKEN_QM}
access_token_secret = ${environment:ACCESS_TOKEN_SECRET_QM}
consumer_key = ${environment:CONSUMER_KEY_QM}
consumer_secret = ${environment:CONSUMER_SECRET_QM}

[circus_config]
recipe = collective.recipe.template[genshi]:genshi
input = cfg/circus.ini
output = ${buildout:parts-directory}/etc/circus.ini

poultry_cfg = ${poultry_config:output}
poultry_cfg_qm = ${poultry_config_qm:output}

[flock-web_config]
recipe = collective.recipe.template[genshi]:genshi
input = cfg/flock-web.cfg
output = ${buildout:parts-directory}/etc/flock-web.cfg

access_token = ${environment:ACCESS_TOKEN}
access_token_secret = ${environment:ACCESS_TOKEN_SECRET}
consumer_key = ${environment:CONSUMER_KEY}
consumer_secret = ${environment:CONSUMER_SECRET}
DEBUG = 0

[flock-web-dev_config]
recipe = collective.recipe.template[genshi]:genshi
input = cfg/flock-web.cfg
output = ${buildout:parts-directory}/etc/flock-web-dev.cfg

access_token = ${environment:ACCESS_TOKEN}
access_token_secret = ${environment:ACCESS_TOKEN_SECRET}
consumer_key = ${environment:CONSUMER_KEY}
consumer_secret = ${environment:CONSUMER_SECRET}

DEBUG = 1

[mkdir]
recipe = z3c.recipe.mkdir
paths =
    tweets/db
    tweets/hydrate

    parts/cache

[pg_activity]
recipe = zc.recipe.egg
